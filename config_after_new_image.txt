

Konfigurace ssh
-------------------------------------------------------------------------------------------
zdroj: http://www.linuxproblem.org/art_9.html

1. Remove all hosts: rm .ssh/known_hosts
2. create dir: ssh linaro@192.168.1.3 mkdir -p .ssh
3. Write key to file: cat .ssh/id_rsa.pub | ssh linaro@192.168.1.3 'cat >> .ssh/authorized_keys'
4. login password: disdis

Uvolneni seriovyho portu
-------------------------------------------------------------------------------------------
Preventing Linux using the serial port
The Broadcom UART appears as /dev/ttyAMA0 under Linux. There are several minor things in the way if you want to have dedicated control of the serial port on a Raspberry Pi.
1. Firstly, the kernel will use the port as controlled by kernel command line contained in /boot/cmdline.txt. The file will look something like this:
dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait

The console keyword outputs messages during boot, and the kgdboc keyword enables kernel debugging. You will need to remove all references to ttyAMA0. So, for the example above /boot/cmdline.txt, should contain:
dwc_otg.lpm_enable=0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait
You must be root to edit this (e.g. use sudo nano /boot/cmdline.txt). Be careful doing this, as a faulty command line can prevent the system booting.
2. Secondly, after booting, a login prompt appears on the serial port. This is controlled by the following lines in /etc/inittab:
#Spawn a getty on Raspberry Pi serial line
T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100
You will need to edit this file to comment out the second line, i.e.
#T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100

Uvolneni ds2490 usb portu
--------------------------------
sudo modprobe -r ds2490

Install libhttpserverd10
----------------------------------
sudo apt-get install libmicrohttpd10
